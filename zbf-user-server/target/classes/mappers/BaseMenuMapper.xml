<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zbf.user.mapper.BaseMenuMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="mapVos" type="com.zbf.user.entity.BaseMenu">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="code" property="code" />
        <result column="menuName" property="menuName" />
        <result column="imagePath" property="imagePath" />
        <result column="url" property="url" />
        <result column="parentCode" property="parentCode" />
        <result column="leavl" property="leavl" />
        <result column="createTime" property="createTime" />
        <collection property="menuList" ofType="com.zbf.user.entity.BaseMenu">
            <id column="id2" property="id" />
            <result column="code2" property="code" />
            <result column="imagePath2" property="imagePath" />
            <result column="menuName2" property="menuName" />
            <result column="parentCode2" property="parentCode" />
            <result column="url2" property="url" />
            <collection property="menuList" ofType="com.zbf.user.entity.BaseMenu">
                <id column="id3" property="id" />
                <result column="code3" property="code" />
                <result column="imagePath3" property="imagePath" />
                <result column="menuName3" property="menuName" />
                <result column="parentCode3" property="parentCode" />
                <result column="url3" property="url" />
            </collection>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, version, code, menuName, imagePath, url, parentCode, leval, createTime
    </sql>


    <select id="getMenuList" resultMap="mapVos">
    SELECT DISTINCT e.id,
    e.CODE,
	e.imagePath,
	e.menuName,
	e.parentCode,
	e.url,
	e2.id id2,
	e2.CODE code2,
	e2.imagePath imagePath2,
	e2.menuName menuName2,
	e2.parentCode parentCode2,
	e2.url url2,
	e3.id id3,
    e3.CODE code3,
	e3.imagePath imagePath3,
	e3.menuName menuName3,
	e3.parentCode parentCode3,
	e3.url url3
    FROM
	base_user a
	LEFT JOIN base_user_role b ON a.id = b.userId
	LEFT JOIN base_role c ON b.roleId = c.id
	LEFT JOIN base_role_menu d ON c.id = d.role_id
	LEFT JOIN base_menu e ON d.menu_id = e.id
	LEFT JOIN base_menu e2 ON e2.parentCode = e.`code`
	LEFT JOIN base_menu e3 ON e3.parentCode = e2.`code`
    WHERE
	a.loginName= #{loginName}
	AND e.parentCode = 0
	AND e.leval = 1
	AND e2.leval = 2
	AND e3.leval = 3
 </select>

    <select id="menuAll" resultMap="mapVos">
        SELECT
        DISTINCT m.id id,
        m.version version,
        m.code code,
        m.menuName menuName,
        m.imagePath imagePath,
        m.url url,
        m.parentCode parentCode,
        m.leval leval,
        m.createTime createTime,
        m2.id id2,
        m2.version version2,
        m2.code code2,
        m2.menuName menuName2,
        m2.imagePath imagePath2,
        m2.url url2,
        m2.parentCode parentCode2,
        m2.leval leval2,
        m2.createTime createTime2,
        m3.id id3,
        m3.version version3,
        m3.code code3,
        m3.menuName menuName3,
        m3.imagePath imagePath3,
        m3.url url3,
        m3.parentCode parentCode3,
        m3.leval leval3,
        m3.createTime createTime3
        FROM
        base_menu m
        LEFT JOIN base_menu m2 ON m2.parentCode = m.`code`
        LEFT JOIN base_menu m3 ON m3.parentCode = m2.`code`
        WHERE
        m.leval =1
    </select>
</mapper>
